version: 2

defaults: &defaults
  machine:
    enabled: true
  environment:
    BUILD_NUM: ${CIRCLE_BUILD_NUM}
    WORKING_DIR: ${CIRCLE_WORKING_DIRECTORY}
    
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: set git sha1
          command:
           echo $CIRCLE_SHA1 >> git_sha1.txt
      - run:
          name: set path
          command: 
            echo 'export PATH=~/.local/bin:$PATH' >> $BASH_ENV
      - run:
          name: install dependencies
          command: |
            sudo apt update -y
            sudo apt install git python-pip python-dev build-essential -y
            git clone --recursive https://github.com/getpelican/pelican-plugins
            sudo pip install --upgrade pip
            pip install -r requirements.txt --upgrade --user
            git clone https://github.com/alexandrevicenzi/Flex.git
      - save_cache:
          key: workingdir-{{ checksum "git_sha1.txt" }}
          paths:
            - /home/circleci/project/
      - run:
          name: build
          command:
            fab rebuild
  deploy:
    <<: *defaults
    steps:
      - run:
          name: set path
          command:
            echo 'export PATH=~/.local/bin:$PATH' >> $BASH_ENV
      - run:
          name: set git sha1
          command:
           echo $CIRCLE_SHA1 >> git_sha1.txt
      - restore_cache:
          keys:
            workingdir-{{ checksum "git_sha1.txt" }}
      - run:
          name: install dependencies
          command: |
            pwd
            ls -lart
            sudo apt update -y
            sudo apt install git python-pip python-dev build-essential -y
            sudo pip install --upgrade pip
            pip install -r requirements.txt --upgrade --user
            git config --global user.email "autoburdz@burdz.net" > /dev/null 2>&1
            git config --global user.name "autoburdz" > /dev/null 2>&1
      - run:
          name: publish
          command:
            fab publish

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - hold:
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold

